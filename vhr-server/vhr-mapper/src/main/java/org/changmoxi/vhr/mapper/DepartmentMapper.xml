<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.changmoxi.vhr.mapper.DepartmentMapper">
    <resultMap id="BaseResultMap" type="org.changmoxi.vhr.model.Department">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="parentId" property="parentId" jdbcType="INTEGER"/>
        <result column="depPath" property="depPath" jdbcType="VARCHAR"/>
        <result column="enabled" property="enabled" jdbcType="BIT"/>
        <result column="isParent" property="parent" jdbcType="BIT"/>
        <result column="deleted" property="deleted" jdbcType="BIT"/>
    </resultMap>

    <resultMap id="DepartmentsWithChildren" type="org.changmoxi.vhr.model.Department" extends="BaseResultMap">
        <!--复杂属性的映射需要另外处理，集合(一对多)用collection-->
        <!--递归(嵌套)查询，select指定查询方法，column指定该记录的哪个字段作为参数传给查询方法-->
        <!--用当前记录的id作为查询方法的parentId参数，查出的结果作为children，通过这样的递归(嵌套)查询来查出所有部门的树形数据-->
        <collection property="children" ofType="org.changmoxi.vhr.model.Department"
                    select="org.changmoxi.vhr.mapper.DepartmentMapper.getAllDepartmentsByParentId" column="id"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        , name, parentId, depPath, enabled, isParent, deleted
    </sql>

    <select id="getAllDepartmentsByParentId" resultMap="DepartmentsWithChildren">
        select
        <include refid="Base_Column_List"/>
        from department where parentId = #{parentId} and deleted = false
    </select>

    <select id="getParentIdsByName" resultType="java.lang.Integer">
        select parentId
        from department
        where name = #{name}
          and deleted = false
    </select>

    <insert id="addDepartmentAndReturnLastInsertId" parameterType="org.changmoxi.vhr.model.Department">
        <!--
            将insert插入的数据的主键id返回到Department对象中
            select last_insert_id(): 得到刚insert进去记录的主键值，只适用于自增主键
            keyProperty: 将查询到的主键id值，设置到parameterType指定的对象的keyProperty指定的属性
            order:select last_insert_id()执行顺序，相对于insert语句来说它的执行顺序
            resultType: 指定select last_insert_id()的结果类型，也就是id的类型
        -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into department
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="parentId != null">
                parentId,
            </if>
            <if test="depPath != null">
                depPath,
            </if>
            <if test="enabled != null">
                enabled,
            </if>
            <if test="parent != null">
                isParent,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=INTEGER},
            </if>
            <if test="depPath != null">
                #{depPath,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                #{enabled,jdbcType=BIT},
            </if>
            <if test="parent != null">
                #{parent,jdbcType=BIT},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=BIT},
            </if>
        </trim>
    </insert>

    <select id="getEmployeeCountOfDepartment" resultType="java.lang.Integer">
        select count(*)
        from employee
        where departmentId = #{id}
    </select>

    <select id="getAllDepartments" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from department
        where deleted = false
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from department
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from department
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="org.changmoxi.vhr.model.Department">
        insert into department (id, name, parentId,
                                depPath, enabled, isParent, deleted)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER},
                #{depPath,jdbcType=VARCHAR}, #{enabled,jdbcType=BIT}, #{parent,jdbcType=BIT}, #{deleted,jdbcType=BIT})
    </insert>

    <insert id="insertSelective" parameterType="org.changmoxi.vhr.model.Department">
        insert into department
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="parentId != null">
                parentId,
            </if>
            <if test="depPath != null">
                depPath,
            </if>
            <if test="enabled != null">
                enabled,
            </if>
            <if test="parent != null">
                isParent,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=INTEGER},
            </if>
            <if test="depPath != null">
                #{depPath,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                #{enabled,jdbcType=BIT},
            </if>
            <if test="parent != null">
                #{parent,jdbcType=BIT},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=BIT},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="org.changmoxi.vhr.model.Department">
        update department
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                parentId = #{parentId,jdbcType=INTEGER},
            </if>
            <if test="depPath != null">
                depPath = #{depPath,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=BIT},
            </if>
            <if test="parent != null">
                isParent = #{parent,jdbcType=BIT},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="org.changmoxi.vhr.model.Department">
        update department
        set name     = #{name,jdbcType=VARCHAR},
            parentId = #{parentId,jdbcType=INTEGER},
            depPath  = #{depPath,jdbcType=VARCHAR},
            enabled  = #{enabled,jdbcType=BIT},
            isParent = #{parent,jdbcType=BIT},
            deleted  = #{deleted,jdbcType=BIT},
            where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>